diff --git a/node_modules/prompts/lib/index.js b/node_modules/prompts/lib/index.js
index 8fa953d..25cb685 100644
--- a/node_modules/prompts/lib/index.js
+++ b/node_modules/prompts/lib/index.js
@@ -65,7 +65,7 @@ async function prompt(questions=[], { onSubmit=noop, onCancel=noop }={}) {
 
     try {
       // Get the injected answer if there is one or prompt the user
-      answer = prompt._injected ? getInjectedAnswer(prompt._injected) : await prompts[type](question);
+      answer = prompt._injected ? getInjectedAnswer(prompt._injected, question.initial) : prompts._injectedObj ? getInjectedAnswerFromObj(prompt._injectedObj, type, question.initial) : await prompts[type](question);
       answers[name] = answer = await getFormattedAnswer(question, answer, true);
       quit = await onSubmit(question, answer, answers);
     } catch (err) {
@@ -78,19 +78,43 @@ async function prompt(questions=[], { onSubmit=noop, onCancel=noop }={}) {
   return answers;
 }
 
-function getInjectedAnswer(injected) {
+function getInjectedAnswer(injected, defaultValue) {
   const answer = injected.shift();
-    if (answer instanceof Error) {
+  if (answer instanceof Error) {
       throw answer;
-    }
+  }
+
+  if(answer === undefined) {
+      return defaultValue
+  }
+
+  return answer;
+}
+
+function getInjectedAnswerFromObj(injected, key, defaultValue) {
+  const answer = injected[key];
+  delete injected[key];
+  
+  if (answer instanceof Error) {
+    throw answer;
+  }
+
+  if(answer === undefined) {
+     return prompts[key].initial
+  }
+
+  return answer;
   
-    return answer;
 }
 
 function inject(answers) {
   prompt._injected = (prompt._injected || []).concat(answers);
 }
 
+function injectByObj(answers) {
+  prompt._injectedObj = Object.assign({}, prompt._injectedObj, {...answers});
+}
+
 function override(answers) {
   prompt._override = Object.assign({}, answers);
 }
